#!/usr/bin/env zsh

#
# Check system
#
if ! [[ $SHELL =~ 'zsh$' ]]; then
  echo "You must execute setup script on ZSH."
  exit 1
fi

for cmd in git zsh; do
  if ! which $cmd &>/dev/null; then
    echo "Before seting up dmgr, you must install ${cmd}."
    exit 1
  fi
done

#
# Common setup
#

export DMGR_SETUP_DIRNAME=$(cd $(dirname $0) && pwd)
export PATH=$PATH:$HOME/bin

. $DMGR_SETUP_DIRNAME/core/src/subsets/setup.zsh

case $1 in
  'install')
    mkdir $HOME/bin
    _link_repo
    _link_script
    touch $HOME/.dmgr/conf/{plugin,inuse}.list
    echo "Created $(echo ${HOME}/.dmgr/conf/{plugin,inuse}.list)"
    dmgrctl enable system
    ;;
  'clean')
    dmgrctl disable :all
    rm -fv $HOME/.dmgr/conf/{plugin,inuse}.list
    _unlink_script
    _unlink_repo

    echo -n "Do you want to delete $HOME/bin? (y/n): "
    while read opt; do
      [[ "$opt" =~ "y|n" ]] && break
      echo "Type (y or n): "
    done

    [ "${opt}" = "y" ] && rm -rfv $HOME/bin
    ;;
  'migrate')
    dmgrctl disable :all:stash
    _unlink_script
    _unlink_repo
    _link_repo
    _link_script
    dmgrctl enable :pop
    ;;
  *)
    cat <<_EOF_
dmgr setup

Usage

  setup <command> (<options>)

Options
  install : Install dmgr core files and setup dotfiles.
  clean   : Clean dmgr core files and dotfiles.
  migrate : Migrate dmgr core files and dotfiles.
_EOF_
    ;;
esac

unset DMGR_SETUP_DIRNAME
